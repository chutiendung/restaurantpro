<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls">
	<!-- Resource dictionary entries should be defined here. -->
	<Style x:Key="MetroTileStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
		<Style.BasedOn>
			<Style TargetType="{x:Type ButtonBase}">
				<Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
				<Setter Property="BorderThickness" Value="2"/>
				<Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Lower"/>
				<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
				<Setter Property="FontWeight" Value="SemiBold"/>
				<Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
				<Setter Property="MinHeight" Value="25"/>
				<Setter Property="Padding" Value="5,6"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ButtonBase}">
							<Grid Background="{TemplateBinding Background}">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
													<SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentPresenter">
													<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="FocusStates">
										<VisualState x:Name="Focused"/>
										<VisualState x:Name="Unfocused"/>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ValidationStates">
										<VisualState x:Name="Valid"/>
										<VisualState x:Name="InvalidFocused"/>
										<VisualState x:Name="InvalidUnfocused"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
								<Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="{DynamicResource OrangeBrush}"/>
									<Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.BasedOn>
	</Style>
    
	<Style x:Key="DataGridStyle" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="Margin" Value="0,0,0,10"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource MainBorderColor}"/>
		<Setter Property="SeparatorBrush" Value="{DynamicResource MainBorderColor}"/>
		<Style.BasedOn>
			<Style TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
				<Setter Property="BorderThickness" Value="0,0,0,3"/>
				<Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
				<Setter Property="Cursor" Value="Hand"/>
				<Setter Property="FontWeight" Value="SemiBold"/>
				<Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="Margin" Value="0"/>
				<Setter Property="MinHeight" Value="25"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Padding" Value="10,4,4,7"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
								<Custom:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
								<Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left">
									<Thumb.Style>
										<Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="{DynamicResource MainBorderColor}"/>
											<Setter Property="Cursor" Value="SizeWE"/>
											<Setter Property="SnapsToDevicePixels" Value="True"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Border BorderBrush="{TemplateBinding Background}" BorderThickness="0,0,1,0" Background="Transparent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
											<Setter Property="Width" Value="8"/>
										</Style>
									</Thumb.Style>
								</Thumb>
								<Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right">
									<Thumb.Style>
										<Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="{DynamicResource MainBorderColor}"/>
											<Setter Property="Cursor" Value="SizeWE"/>
											<Setter Property="SnapsToDevicePixels" Value="True"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Border BorderBrush="{TemplateBinding Background}" BorderThickness="0,0,1,0" Background="Transparent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
											<Setter Property="Width" Value="8"/>
										</Style>
									</Thumb.Style>
								</Thumb>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="SortDirection" Value="Ascending">
									<Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
									<Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
								</Trigger>
								<Trigger Property="SortDirection" Value="Descending">
									<Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
									<Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
									<Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
								</Trigger>
								<Trigger Property="DisplayIndex" Value="0">
									<Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsMouseOver" Value="True"/>
							<Condition Property="SortDirection" Value="{x:Null}"/>
						</MultiTrigger.Conditions>
						<Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
					</MultiTrigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.BasedOn>
	</Style>
</ResourceDictionary>